gnat_packages = [
   "libadalang",
   "libadalang-tools",
   "gnat",
]


def build():
    anod_build("libgpr2", qualifier={"bare": True})
    anod_build("libgpr2")
    anod_build("gpr2")
    anod_build("gpr2", qualifier={"gpr2build": True})


def install_gpr2():
    if env.host.platform == "x86_64-linux":
        anod_install("gpr2-doc")
    anod_install("libgpr2", qualifier={"bare": True})
    anod_install("gpr2", qualifier={"gpr2build": True})


def build_gnat_bootstrap():
    install_gpr2()
    anod_install("gpr2")
    anod_install("libgpr2")
    anod_build("gprname")
    anod_build("gprbuild")
    for pkg in gnat_packages:
        anod_build(pkg)
    anod_build("gnat")


def build_debug():
    install_gpr2()
    anod_build("libgpr2", qualifier={"bare": True, "dbg": True})
    anod_build("gpr2", qualifier={"dbg": "True"})


def build_libgpr2_users():
    wave_pkg = ("spark2014", "gnatcheck", "gnatfuzz", "lkql")
    edge_pkg = ("als", "gnatcov", "gnatdoc4", "gnatformat", "lal-refactor", "gnathub")

    install_gpr2()
    anod_install("libgpr2")
    anod_install("gprbuild")
    for pkg in gnat_packages:
        anod_install(pkg)
    for pkg in wave_pkg:
        anod_build(pkg)
    for pkg in edge_pkg:
        anod_build(pkg, qualifier={"edge": True})


def test_gpr2():
    install_gpr2()
    anod_test("gpr2")


def test_gpr2_cov():
    install_gpr2()
    anod_build("gpr2", qualifier={"gpr2build": True, "coverage": True})
    anod_test("gpr2", qualifier={"coverage": True})


def test_gpr2_valgrind():
    install_gpr2()
    anod_build("gpr2", qualifier={"gpr2build": True, "valgrind": True})
    anod_test("gpr2", qualifier={"valgrind": True})


def test_gpr2build():
    install_gpr2()
    anod_test("gprbuild", qualifier={"gpr2build": True})


def test_gpr2build_armhf_linux():
    install_gpr2()
    anod_test("gprbuild", qualifier={"gpr2build": True}, target="armhf-linux,,qemu")
