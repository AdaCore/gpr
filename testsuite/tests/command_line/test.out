-------------------------
gprbuild -h
-------------------------
Usage:
  gprbuild [-P<proj>|<proj.gpr>] [opts] [source]
     [-cargs[:lang] opts] [-largs opts] [-kargs opts] [-gargs opts]

 -h, --help
           Display usage and exit
 --version
           Display version and exit
 -bargs[:<lang>] opts
           options to be passed to the binder
 -cargs[:<lang>] opts
           options to be passed to the compiler
 -gargs opts, -margs opts
           options interpreted by gprbuild
 -kargs opts
           options to be passed to gprconfig
 -largs opts
           options to be passed to the linker

Build control switches:
 -b        Bind only
 -c        Compile only
 -d        Display compilation progress
 -eI<nn>   Index of main unit in multi-unit source file
 -f        Force recompilation
 -j<nn>    Use <nn> processes to compile, bind and link. If 0, use the number
           of CPUs on the host.
 -k        Keep going after compilation errors
 -l        Link only
 -o name   Choose an alternate executable name
 -p        Create missing obj/lib/exec directories
 -R        Do not use run path option
 -r        Recursive (default except when using -u)
 -U        Unique compilation for all sources of all projects
 -u        Unique compilation, only compile the given files
 -z        No main subprogram (zero main)
 --build-script=script_file
           Create a build script script_file
 --compiler-subst=lang,tool
           Use tool for compiling files in language lang, instead of the normal
           compiler
 --create-map-file[=file.map]
           Have the linker generate the map file
 --indirect-imports
           Sources can import from directly and indirectly imported projects
 --keep-temp-files
           Do not delete temporary files
 --no-indirect-imports
           Sources can import only from directly imported projects
 --no-object-check
           Do not check object files
 --no-sal-binding
           Reuse binder files when linking SALs
 --no-split-units
           Check that compilation unit parts are from the same view
 --no-warnings-replay, -n
           Do not replay the warnings of skipped actions
 --restricted-to-languages=<lang1>,<lang2>,...
           Restrict the languages of the sources
 --temp-dir=[os|obj]
           Determinte where temporary files should be located. Either in the
           object directory of the owning project or the default system
           temporary directory

Project switches:
   Project file handling switches

 -aP dir   Add directory "dir" to project search path
 -P proj.gpr
           Use project file "proj.gpr"
 -X NAME=Value
           Set the project external reference "NAME" to "Value"
 --implicit-with=proj.gpr
           Add the given  project as a dependency of all loaded projects
 --no-project
           Do not use project file
 --relocate-build-tree[=dir]
           Root obj/lib/exec dirs are current directory or "dir"
 --root-dir=dir
           Root directory of obj/lib/exec to relocate
 --src-subdirs=dir
           Prepend <obj>/dir to the list of source dirs for each project
 --subdirs=dir
           Use "dir" as suffix to obj/lib/exec directories
 --unchecked-shared-lib-imports
           Shared lib projects may import any project

Project configuration switches:
   Switches used to set or modify the way the project configuration is done

 --autoconf=file.cgpr
           Specify/create the main config project file name
 --config=file.cgpr
           Specify the main config project file name
 --db dir  Parse "dir" as an additional knowledge base
 --db-     Do not load the standard knowledge base
 --RTS[:<lang>]=runtime
           Specify a runtime for <lang> or Ada (default)
 --target=targetname
           Specify a target for cross platforms

Verbosity switches:
 -F        Full project path name in brief error messages
 -q        Be quiet/terse
 -v        Verbose output
 -we       Treat warnings as errors
 -wn       Treat warnings as warnings
 -ws       Suppress all warnings

For compatibility with gnatmake, these switches are passed to the Ada compiler:
 -fno-inline
 -fstack-check
 -g[<debug_opt>]
 -nostdinc
 -nostdlib
 -O[<level>]

-------------------------
gprclean -h
-------------------------
Usage:
  gprclean [-P<proj>|<proj.gpr>] [opts] [mains]

 -h, --help
           Display usage and exit
 --version
           Display version and exit

clean switches:
   gprclean specific switches.

 -c        Only delete compiler generated files
 -f        Force deletions of unwritable files
 -n        Nothing to do: only list files to delete
 -p        Remove empty build directories
 -r        Clean all projects recursively
 --autoconf=file.cgpr
           Specify generated config project file name

Project switches:
   Project file handling switches

 -aP dir   Add directory "dir" to project search path
 -P proj.gpr
           Use project file "proj.gpr"
 -X NAME=Value
           Set the project external reference "NAME" to "Value"
 --implicit-with=proj.gpr
           Add the given  project as a dependency of all loaded projects
 --no-project
           Do not use project file
 --relocate-build-tree[=dir]
           Root obj/lib/exec dirs are current directory or "dir"
 --root-dir=dir
           Root directory of obj/lib/exec to relocate
 --src-subdirs=dir
           Prepend <obj>/dir to the list of source dirs for each project
 --subdirs=dir
           Use "dir" as suffix to obj/lib/exec directories

Project configuration switches:
   Switches used to set or modify the way the project configuration is done

 --config=file.cgpr
           Specify the main config project file name
 --db dir  Parse "dir" as an additional knowledge base
 --db-     Do not load the standard knowledge base
 --RTS[:<lang>]=runtime
           Specify a runtime for <lang> or Ada (default)
 --target=targetname
           Specify a target for cross platforms

Verbosity switches:
 -F        Full project path name in brief error messages
 -q        Be quiet/terse
 -v        Verbose output
 -we       Treat warnings as errors
 -wn       Treat warnings as warnings
 -ws       Suppress all warnings

-------------------------
gprinstall -h
-------------------------
Usage:

 -h, --help
           Display usage and exit
 --version
           Display version and exit

install switches:
   gprinstall options

 -d, --dry-run
           Execute nothing, display commands
 -f, --force
           Force installation, overwrite files
 -m        Minimal copy of sources (only those needed)
 -p, --create-missing-dirs
           Create directories when missing
 -r        Recursive
 --ali-subdir=<dir>
           The ALI directory/sub-directory
 --build-name=<name>
           Build name value (default is "Default")
 --build-var=<name>
           Name of the variable which identify a build)
 --exec-subdir=<dir>
           The executable directory/sub-directory
 --install-name=<name>
           The name of the installation (manifest)
 --lib-subdir=<dir>
           The library directory/sub-directory
 --link-lib-subdir=<dir>
           The symlib directory/sub-directory to libraries
 --list    List all installed projects
 --minimal-project
           Record the strict minimal date in project file
 --mode=dev|usage
           Kind of installation (default is "dev")
 --no-build-var
           Do not generate external build variable
 --no-lib-link
           Do not copy shared lib in exec/lib directory
 --no-manifest
           Do not generate the manifest file
 --no-project
           Do not install project file
 --prefix=<dir>
           Install destination directory
 --project-subdir=<dir>
           The project directory/sub-directory
 --side-debug
           Write debug information into a separate file
 --sources-only
           Copy project sources only
 --sources-subdir=<dir>
           The sources directory/sub-directory
 --stat    Display stats about installed projects, must be used with --list
 --uninstall
           Remove all previously installed files

Project switches:
   Project file handling switches

 -aP dir   Add directory "dir" to project search path
 -P proj.gpr
           Use project file "proj.gpr"
 -X NAME=Value
           Set the project external reference "NAME" to "Value"
 --implicit-with=proj.gpr
           Add the given  project as a dependency of all loaded projects
 --relocate-build-tree[=dir]
           Root obj/lib/exec dirs are current directory or "dir"
 --root-dir=dir
           Root directory of obj/lib/exec to relocate
 --src-subdirs=dir
           Prepend <obj>/dir to the list of source dirs for each project
 --subdirs=dir
           Use "dir" as suffix to obj/lib/exec directories

Project configuration switches:
   Switches used to set or modify the way the project configuration is done

 --config=file.cgpr
           Specify the main config project file name
 --db dir  Parse "dir" as an additional knowledge base
 --db-     Do not load the standard knowledge base
 --RTS[:<lang>]=runtime
           Specify a runtime for <lang> or Ada (default)
 --target=targetname
           Specify a target for cross platforms

Verbosity switches:
 -F        Full project path name in brief error messages
 -q        Be quiet/terse
 -v        Verbose output
 -we       Treat warnings as errors
 -wn       Treat warnings as warnings
 -ws       Suppress all warnings

-------------------------
gprinspect -h
-------------------------
Usage:

 -h, --help
           Display usage and exit
 --version
           Display version and exit

gprinspect switches:
 -c, --from-config
           Display attributes inherited from configuration
 -r, --recursive
           All none external projects recursively
 --all     Display everything
 --attributes
           Display attributes
 --display[=json|json-compact|textual]
           output formatting
 --gpr-registry-file=<file>
           Recognize additional attributes defined in <file>
 --packages
           Display packages
 --variables
           Display variables & types
 --views=view1[,view2]
           Select the view to display. Only available when using
           [--display=textual].

Project switches:
   Project file handling switches

 -aP dir   Add directory "dir" to project search path
 -P proj.gpr
           Use project file "proj.gpr"
 -X NAME=Value
           Set the project external reference "NAME" to "Value"
 --implicit-with=proj.gpr
           Add the given  project as a dependency of all loaded projects
 --relocate-build-tree[=dir]
           Root obj/lib/exec dirs are current directory or "dir"
 --root-dir=dir
           Root directory of obj/lib/exec to relocate
 --src-subdirs=dir
           Prepend <obj>/dir to the list of source dirs for each project
 --subdirs=dir
           Use "dir" as suffix to obj/lib/exec directories

Project configuration switches:
   Switches used to set or modify the way the project configuration is done

 --config=file.cgpr
           Specify the main config project file name
 --db dir  Parse "dir" as an additional knowledge base
 --db-     Do not load the standard knowledge base
 --RTS[:<lang>]=runtime
           Specify a runtime for <lang> or Ada (default)
 --target=targetname
           Specify a target for cross platforms

Verbosity switches:
 -F        Full project path name in brief error messages
 -v        Verbose output
 -we       Treat warnings as errors
 -wn       Treat warnings as warnings
 -ws       Suppress all warnings

-------------------------
gprbuild --help
-------------------------
Usage:
  gprbuild [-P<proj>|<proj.gpr>] [opts] [source]
     [-cargs[:lang] opts] [-largs opts] [-kargs opts] [-gargs opts]

 -h, --help
           Display usage and exit
 --version
           Display version and exit
 -bargs[:<lang>] opts
           options to be passed to the binder
 -cargs[:<lang>] opts
           options to be passed to the compiler
 -gargs opts, -margs opts
           options interpreted by gprbuild
 -kargs opts
           options to be passed to gprconfig
 -largs opts
           options to be passed to the linker

Build control switches:
 -b        Bind only
 -c        Compile only
 -d        Display compilation progress
 -eI<nn>   Index of main unit in multi-unit source file
 -f        Force recompilation
 -j<nn>    Use <nn> processes to compile, bind and link. If 0, use the number
           of CPUs on the host.
 -k        Keep going after compilation errors
 -l        Link only
 -o name   Choose an alternate executable name
 -p        Create missing obj/lib/exec directories
 -R        Do not use run path option
 -r        Recursive (default except when using -u)
 -U        Unique compilation for all sources of all projects
 -u        Unique compilation, only compile the given files
 -z        No main subprogram (zero main)
 --build-script=script_file
           Create a build script script_file
 --compiler-subst=lang,tool
           Use tool for compiling files in language lang, instead of the normal
           compiler
 --create-map-file[=file.map]
           Have the linker generate the map file
 --indirect-imports
           Sources can import from directly and indirectly imported projects
 --keep-temp-files
           Do not delete temporary files
 --no-indirect-imports
           Sources can import only from directly imported projects
 --no-object-check
           Do not check object files
 --no-sal-binding
           Reuse binder files when linking SALs
 --no-split-units
           Check that compilation unit parts are from the same view
 --no-warnings-replay, -n
           Do not replay the warnings of skipped actions
 --restricted-to-languages=<lang1>,<lang2>,...
           Restrict the languages of the sources
 --temp-dir=[os|obj]
           Determinte where temporary files should be located. Either in the
           object directory of the owning project or the default system
           temporary directory

Project switches:
   Project file handling switches

 -aP dir   Add directory "dir" to project search path
 -P proj.gpr
           Use project file "proj.gpr"
 -X NAME=Value
           Set the project external reference "NAME" to "Value"
 --implicit-with=proj.gpr
           Add the given  project as a dependency of all loaded projects
 --no-project
           Do not use project file
 --relocate-build-tree[=dir]
           Root obj/lib/exec dirs are current directory or "dir"
 --root-dir=dir
           Root directory of obj/lib/exec to relocate
 --src-subdirs=dir
           Prepend <obj>/dir to the list of source dirs for each project
 --subdirs=dir
           Use "dir" as suffix to obj/lib/exec directories
 --unchecked-shared-lib-imports
           Shared lib projects may import any project

Project configuration switches:
   Switches used to set or modify the way the project configuration is done

 --autoconf=file.cgpr
           Specify/create the main config project file name
 --config=file.cgpr
           Specify the main config project file name
 --db dir  Parse "dir" as an additional knowledge base
 --db-     Do not load the standard knowledge base
 --RTS[:<lang>]=runtime
           Specify a runtime for <lang> or Ada (default)
 --target=targetname
           Specify a target for cross platforms

Verbosity switches:
 -F        Full project path name in brief error messages
 -q        Be quiet/terse
 -v        Verbose output
 -we       Treat warnings as errors
 -wn       Treat warnings as warnings
 -ws       Suppress all warnings

For compatibility with gnatmake, these switches are passed to the Ada compiler:
 -fno-inline
 -fstack-check
 -g[<debug_opt>]
 -nostdinc
 -nostdlib
 -O[<level>]

-------------------------
gprclean --help
-------------------------
Usage:
  gprclean [-P<proj>|<proj.gpr>] [opts] [mains]

 -h, --help
           Display usage and exit
 --version
           Display version and exit

clean switches:
   gprclean specific switches.

 -c        Only delete compiler generated files
 -f        Force deletions of unwritable files
 -n        Nothing to do: only list files to delete
 -p        Remove empty build directories
 -r        Clean all projects recursively
 --autoconf=file.cgpr
           Specify generated config project file name

Project switches:
   Project file handling switches

 -aP dir   Add directory "dir" to project search path
 -P proj.gpr
           Use project file "proj.gpr"
 -X NAME=Value
           Set the project external reference "NAME" to "Value"
 --implicit-with=proj.gpr
           Add the given  project as a dependency of all loaded projects
 --no-project
           Do not use project file
 --relocate-build-tree[=dir]
           Root obj/lib/exec dirs are current directory or "dir"
 --root-dir=dir
           Root directory of obj/lib/exec to relocate
 --src-subdirs=dir
           Prepend <obj>/dir to the list of source dirs for each project
 --subdirs=dir
           Use "dir" as suffix to obj/lib/exec directories

Project configuration switches:
   Switches used to set or modify the way the project configuration is done

 --config=file.cgpr
           Specify the main config project file name
 --db dir  Parse "dir" as an additional knowledge base
 --db-     Do not load the standard knowledge base
 --RTS[:<lang>]=runtime
           Specify a runtime for <lang> or Ada (default)
 --target=targetname
           Specify a target for cross platforms

Verbosity switches:
 -F        Full project path name in brief error messages
 -q        Be quiet/terse
 -v        Verbose output
 -we       Treat warnings as errors
 -wn       Treat warnings as warnings
 -ws       Suppress all warnings

-------------------------
gprinstall --help
-------------------------
Usage:

 -h, --help
           Display usage and exit
 --version
           Display version and exit

install switches:
   gprinstall options

 -d, --dry-run
           Execute nothing, display commands
 -f, --force
           Force installation, overwrite files
 -m        Minimal copy of sources (only those needed)
 -p, --create-missing-dirs
           Create directories when missing
 -r        Recursive
 --ali-subdir=<dir>
           The ALI directory/sub-directory
 --build-name=<name>
           Build name value (default is "Default")
 --build-var=<name>
           Name of the variable which identify a build)
 --exec-subdir=<dir>
           The executable directory/sub-directory
 --install-name=<name>
           The name of the installation (manifest)
 --lib-subdir=<dir>
           The library directory/sub-directory
 --link-lib-subdir=<dir>
           The symlib directory/sub-directory to libraries
 --list    List all installed projects
 --minimal-project
           Record the strict minimal date in project file
 --mode=dev|usage
           Kind of installation (default is "dev")
 --no-build-var
           Do not generate external build variable
 --no-lib-link
           Do not copy shared lib in exec/lib directory
 --no-manifest
           Do not generate the manifest file
 --no-project
           Do not install project file
 --prefix=<dir>
           Install destination directory
 --project-subdir=<dir>
           The project directory/sub-directory
 --side-debug
           Write debug information into a separate file
 --sources-only
           Copy project sources only
 --sources-subdir=<dir>
           The sources directory/sub-directory
 --stat    Display stats about installed projects, must be used with --list
 --uninstall
           Remove all previously installed files

Project switches:
   Project file handling switches

 -aP dir   Add directory "dir" to project search path
 -P proj.gpr
           Use project file "proj.gpr"
 -X NAME=Value
           Set the project external reference "NAME" to "Value"
 --implicit-with=proj.gpr
           Add the given  project as a dependency of all loaded projects
 --relocate-build-tree[=dir]
           Root obj/lib/exec dirs are current directory or "dir"
 --root-dir=dir
           Root directory of obj/lib/exec to relocate
 --src-subdirs=dir
           Prepend <obj>/dir to the list of source dirs for each project
 --subdirs=dir
           Use "dir" as suffix to obj/lib/exec directories

Project configuration switches:
   Switches used to set or modify the way the project configuration is done

 --config=file.cgpr
           Specify the main config project file name
 --db dir  Parse "dir" as an additional knowledge base
 --db-     Do not load the standard knowledge base
 --RTS[:<lang>]=runtime
           Specify a runtime for <lang> or Ada (default)
 --target=targetname
           Specify a target for cross platforms

Verbosity switches:
 -F        Full project path name in brief error messages
 -q        Be quiet/terse
 -v        Verbose output
 -we       Treat warnings as errors
 -wn       Treat warnings as warnings
 -ws       Suppress all warnings

-------------------------
gprinspect --help
-------------------------
Usage:

 -h, --help
           Display usage and exit
 --version
           Display version and exit

gprinspect switches:
 -c, --from-config
           Display attributes inherited from configuration
 -r, --recursive
           All none external projects recursively
 --all     Display everything
 --attributes
           Display attributes
 --display[=json|json-compact|textual]
           output formatting
 --gpr-registry-file=<file>
           Recognize additional attributes defined in <file>
 --packages
           Display packages
 --variables
           Display variables & types
 --views=view1[,view2]
           Select the view to display. Only available when using
           [--display=textual].

Project switches:
   Project file handling switches

 -aP dir   Add directory "dir" to project search path
 -P proj.gpr
           Use project file "proj.gpr"
 -X NAME=Value
           Set the project external reference "NAME" to "Value"
 --implicit-with=proj.gpr
           Add the given  project as a dependency of all loaded projects
 --relocate-build-tree[=dir]
           Root obj/lib/exec dirs are current directory or "dir"
 --root-dir=dir
           Root directory of obj/lib/exec to relocate
 --src-subdirs=dir
           Prepend <obj>/dir to the list of source dirs for each project
 --subdirs=dir
           Use "dir" as suffix to obj/lib/exec directories

Project configuration switches:
   Switches used to set or modify the way the project configuration is done

 --config=file.cgpr
           Specify the main config project file name
 --db dir  Parse "dir" as an additional knowledge base
 --db-     Do not load the standard knowledge base
 --RTS[:<lang>]=runtime
           Specify a runtime for <lang> or Ada (default)
 --target=targetname
           Specify a target for cross platforms

Verbosity switches:
 -F        Full project path name in brief error messages
 -v        Verbose output
 -we       Treat warnings as errors
 -wn       Treat warnings as warnings
 -ws       Suppress all warnings

-------------------------
gprbuild --no-such-switch
-------------------------
gprbuild: unrecognized option '--no-such-switch'
try "gprbuild --help" for more information.
STATUS: 7

-------------------------
gprclean --no-such-switch
-------------------------
gprclean: unrecognized option '--no-such-switch'
try "gprclean --help" for more information.
STATUS: 7

-------------------------
gprinstall --no-such-switch
-------------------------
gprinstall: unrecognized option '--no-such-switch'
try "gprinstall --help" for more information.
STATUS: 7

-------------------------
gprinspect --no-such-switch
-------------------------
gprinspect: unrecognized option '--no-such-switch'
try "gprinspect --help" for more information.
STATUS: 7

-------------------------
gprbuild --config:conf.cgpr
-------------------------
gprbuild: unexpected index for '--config:conf.cgpr'
try "gprbuild --help" for more information.
STATUS: 7

-------------------------
gprclean --config:conf.cgpr
-------------------------
gprclean: unexpected index for '--config:conf.cgpr'
try "gprclean --help" for more information.
STATUS: 7

-------------------------
gprinstall --config:conf.cgpr
-------------------------
gprinstall: unexpected index for '--config:conf.cgpr'
try "gprinstall --help" for more information.
STATUS: 7

-------------------------
gprinspect --config:conf.cgpr
-------------------------
gprinspect: unexpected index for '--config:conf.cgpr'
try "gprinspect --help" for more information.
STATUS: 7

-------------------------
gprbuild -P
-------------------------
gprbuild: parameter expected for argument '-P'
try "gprbuild --help" for more information.
STATUS: 7

-------------------------
gprclean -P
-------------------------
gprclean: parameter expected for argument '-P'
try "gprclean --help" for more information.
STATUS: 7

-------------------------
gprinstall -P
-------------------------
gprinstall: parameter expected for argument '-P'
try "gprinstall --help" for more information.
STATUS: 7

-------------------------
gprinspect -P
-------------------------
gprinspect: parameter expected for argument '-P'
try "gprinspect --help" for more information.
STATUS: 7

-------------------------
gprbuild -j1
-------------------------
using project file /demo.gpr
"obj" created
[Ada Compile]     pkg.ads
[Ada Compile]     pkg2.adb

-------------------------
gprbuild -P -q
-------------------------
gprbuild: project file name missing after -P
try "gprbuild --help" for more information.
STATUS: 7

-------------------------
gprclean demo.gpr pkg.ads -n
-------------------------
/obj/pkg.o
/obj/pkg.ali
/obj/.ada_compile_pkg.ads.json
/obj/.gpr-file-index-demo.json

-------------------------
gprclean -P demo.gpr demo2.gpr
-------------------------
gprclean: cannot have -P<prj> and <prj> on the same command line
try "gprclean --help" for more information.
STATUS: 7

-------------------------
gprclean demo.gpr demo2.gpr
-------------------------
gprclean: cannot have multiple <proj> on the same command line
try "gprclean --help" for more information.
STATUS: 7

-------------------------
gprclean -Pdemo -n
-------------------------
/obj/pkg.o
/obj/pkg.ali
/obj/.ada_compile_pkg.ads.json
/obj/pkg2.o
/obj/pkg2.ali
/obj/.ada_compile_pkg2.adb.json
/obj/.gpr-file-index-demo.json

-------------------------
gprclean --RTS:ada default -n demo.gpr
-------------------------
/obj/pkg.o
/obj/pkg.ali
/obj/.ada_compile_pkg.ads.json
/obj/pkg2.o
/obj/pkg2.ali
/obj/.ada_compile_pkg2.adb.json
/obj/.gpr-file-index-demo.json

-------------------------
gprclean --RTS:ada=default -n demo.gpr
-------------------------
/obj/pkg.o
/obj/pkg.ali
/obj/.ada_compile_pkg.ads.json
/obj/pkg2.o
/obj/pkg2.ali
/obj/.ada_compile_pkg2.adb.json
/obj/.gpr-file-index-demo.json

-------------------------
gprclean --RTS default -n demo.gpr
-------------------------
/obj/pkg.o
/obj/pkg.ali
/obj/.ada_compile_pkg.ads.json
/obj/pkg2.o
/obj/pkg2.ali
/obj/.ada_compile_pkg2.adb.json
/obj/.gpr-file-index-demo.json

-------------------------
gprclean --RTS=default -n demo.gpr
-------------------------
/obj/pkg.o
/obj/pkg.ali
/obj/.ada_compile_pkg.ads.json
/obj/pkg2.o
/obj/pkg2.ali
/obj/.ada_compile_pkg2.adb.json
/obj/.gpr-file-index-demo.json

