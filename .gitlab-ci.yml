include: '/.gitlab-ci-shared.yml'

stages:
  - build
  - test

.gpr2_test_template:
  extends: .test_template
  cache:
    - key: $CI_COMMIT_REF_SLUG
      fallback_keys:
        - next
      policy: pull
      paths:
        - cache

###########
## BUILD ##
###########

build:
  extends: .job_template
  stage: build
  cache:
    - key: $CI_COMMIT_REF_SLUG
      fallback_keys:
        - next
      paths:
        - cache
  script:
    # Tune to use our build & test plan
    - anod tune --plan $CI_PROJECT_DIR/.ci.plan

    # if a cached sandbox exists, use it
    - install_cache full

    # (re)build gpr2
    - anod run build

    # Save gpr builds and libadalang in cache to speed up a re-build
    - mkdir -p $CI_PROJECT_DIR/cache
    - rsync -a $SANDBOX/$HOST/*gpr*next* $CI_PROJECT_DIR/cache/

####################
## GPR2 TESTSUITE ##
####################

test_gpr2:
  extends: .gpr2_test_template
  script:
    - install_cache
    - run_testsuite gpr2 -Qnext test_gpr2
  artifacts:
    when:
      always
    paths:
      - testgpr2_result.xml
    reports:
      junit: testgpr2_result.xml

##############
## COVERAGE ##
##############

test_gpr2_cov:
  extends: .test_template
  script:
    - anod build gpr2 -Qcoverage,next

    # do a normal testsuite run but save the exit code instead of just exiting
    # so that coverage artifacts can be saved and used.
    - result=0
    - run_testsuite gpr2 -Qcoverage,next test_gpr2_cov || result=$?

    - mkdir $CI_PROJECT_DIR/coverage

    # save coverage results
    - mv $RESULTS_DIR/coverage-cobertura/cobertura.xml $CI_PROJECT_DIR/coverage/
    - mv $RESULTS_DIR/coverage-dhtml $CI_PROJECT_DIR/coverage/dhtml

    # display coverage stats for global reporting
    - echo_coverage_stats --coverage-file $RESULTS_DIR/coverage-xml/index.xml

    # report initial test status code
    - exit $result

  coverage: '/^Stmt Coverage:\s+(\d+\.\d+\%) \(\d+ \/ \d+\)$/'
  artifacts:
    when:
      always
    paths:
      - coverage/cobertura.xml
      - coverage/dhtml
      - testgpr2cov_result.xml
    reports:
      junit: testgpr2cov_result.xml
      coverage_report:
        coverage_format: cobertura
        path: coverage/cobertura.xml
