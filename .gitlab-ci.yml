stages:
  - check
  - build
  - test

# Don't run CIs on branches without merge requests, except on important branches
# The latter is important to get automatic comparison on failing tests
workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: always
    - if: $CI_PIPELINE_SOURCE == "push" && ($CI_COMMIT_REF_NAME == "master" || $CI_COMMIT_REF_NAME == "main")
      when: always
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: always
    - if: $CI_PIPELINE_SOURCE == "web"
      when: always
    - when: never

include:
  ###############
  # BUILD STAGE #
  ###############

  # Issue check
  - component: $CI_SERVER_FQDN/eng/gitlab-templates/check-issue@~latest

  # pre-commit: TODO come up with a proper config
  # - component: $CI_SERVER_FQDN/eng/gitlab-templates/pre-commit@~latest
  #   inputs:
  #     on-diff: true

  # regular build
  - component: $CI_SERVER_FQDN/eng/gitlab-templates/build@~latest
    inputs:
      job-name: build
      anod-args: run build
      save-component: true
      cpus: 16
      disk: 80
      windows: true
      windows-cpus: 8
      windows-mem: 16
      needs: []
      windows-needs: []
      rules:
        - allow_failure: false

  # debug build
  - component: $CI_SERVER_FQDN/eng/gitlab-templates/build@~latest
    inputs:
      job-name: build_debug
      anod-args: run build_debug
      save-component: false
      cpus: 16
      disk: 80
      needs: ["build:linux"]
      rules:
        - allow_failure: false

  ##############
  # TEST STAGE #
  ##############

  # gpr2 testsuite
  - component: $CI_SERVER_FQDN/eng/gitlab-templates/test@~latest
    inputs:
      job-name: test_gpr2
      anod-args: run test_gpr2
      disk: 80
      save-anod-logs: true
      needs: ["build:linux"]
      windows: true
      windows-cpus: 8
      windows-mem: 16
      windows-needs: ["build:windows"]
      artifacts: ["xunit-*.xml"]
      rules:
        - allow_failure: true
