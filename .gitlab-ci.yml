stages:
  - check
  - build
  - test

# Don't run CIs on branches without merge requests, except on important branches
# The latter is important to get automatic comparison on failing tests
workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: always
    - if: $CI_PIPELINE_SOURCE == "push" && ($CI_COMMIT_REF_NAME == "master" || $CI_COMMIT_REF_NAME == "main")
      when: always
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: always
    - if: $CI_PIPELINE_SOURCE == "web"
      when: always
    - when: never

include:
  ###############
  # BUILD STAGE #
  ###############

  # Issue check
  - component: $CI_SERVER_FQDN/eng/gitlab-templates/check-issue@~latest

  # pre-commit: TODO come up with a proper config
  # - component: $CI_SERVER_FQDN/eng/gitlab-templates/pre-commit@~latest
  #   inputs:
  #     on-diff: true

  # regular build
  - component: $CI_SERVER_FQDN/eng/gitlab-templates/build@~latest
    inputs:
      job-name: build
      anod-args: run build
      save-component: true
      cpus: 16
      disk: 80
      windows: true
      windows-cpus: 8
      windows-mem: 16
      needs: []
      windows-needs: []
      rules:
        - allow_failure: false

  # debug build
  - component: $CI_SERVER_FQDN/eng/gitlab-templates/build@~latest
    inputs:
      job-name: build_debug
      anod-args: run build_debug
      save-component: false
      cpus: 16
      disk: 80
      needs: ["build:linux"]
      rules:
        - allow_failure: false

  # bootstrap build
  - component: $CI_SERVER_FQDN/eng/gitlab-templates/build@~latest
    inputs:
      job-name: build_gnat_bootstrap
      anod-args: run build_gnat_bootstrap
      save-component: true
      cpus: 16
      disk: 80
      needs: ["build:linux"]
      windows: true
      windows-cpus: 8
      windows-mem: 16
      windows-needs: ["build:windows"]
      rules:
        - allow_failure: false

  # libgpr2 users build
  - component: $CI_SERVER_FQDN/eng/gitlab-templates/build@~latest
    inputs:
      job-name: build_gpr2_users
      anod-args: run build_libgpr2_users
      save-component: false
      cpus: 16
      disk: 80
      needs: ["build_gnat_bootstrap:linux"]
      rules:
        - allow_failure: true

  ##############
  # TEST STAGE #
  ##############

  # gpr2 testsuite
  - component: $CI_SERVER_FQDN/eng/gitlab-templates/test@~latest
    inputs:
      job-name: test_gpr2
      anod-args: run test_gpr2
      disk: 80
      save-anod-logs: true
      needs: ["build:linux"]
      windows: true
      windows-cpus: 8
      windows-mem: 16
      windows-needs: ["build:windows"]
      artifacts: ["xunit-*.xml"]
      rules:
        - allow_failure: true

  # gpr2 testsuite with valgrind
  - component: $CI_SERVER_FQDN/eng/gitlab-templates/test@~latest
    inputs:
      job-name: test_gpr2_valgrind
      anod-args: run test_gpr2_valgrind
      disk: 80
      save-anod-logs: true
      needs: ["build:linux"]
      rules:
        - allow_failure: true

  # gprbuild testsuite with gpr2build
  - component: $CI_SERVER_FQDN/eng/gitlab-templates/test@~latest
    inputs:
      job-name: test_gpr2build
      anod-args: run test_gpr2build
      generic-anod-ci-args: --add-dep eng/gpr/gprbuild-internal
      disk: 80
      save-anod-logs: true
      needs: ["build:linux"]
      windows: true
      windows-needs: ["build:windows"]
      rules:
        - allow_failure: true

   # gprbuild testsuite with gpr2build for armhf-linux
  - component: $CI_SERVER_FQDN/eng/gitlab-templates/test@~latest
    inputs:
      job-name: test_gpr2build:armhf_linux
      anod-args: run test_gpr2build_armhf_linux
      generic-anod-ci-args: --add-dep eng/gpr/gprbuild-internal
      disk: 80
      save-anod-logs: true
      needs: ["build:linux"]
      rules:
        - allow_failure: true

   # gprbuild testsuite with gpr2build for arm-elf-zynq7k
  - component: $CI_SERVER_FQDN/eng/gitlab-templates/test@~latest
    inputs:
      job-name: test_gpr2build:arm_elf_zynq7k
      anod-args: run test_gpr2build_arm_elf_zynq7k
      generic-anod-ci-args: --add-dep eng/gpr/gprbuild-internal
      disk: 80
      save-anod-logs: true
      needs: ["build:linux"]
      rules:
        - allow_failure: true

  # gprconfig testsuite
  - component: $CI_SERVER_FQDN/eng/gitlab-templates/test@~latest
    inputs:
      job-name: test_gprconfig
      anod-args: run test_gprconfig
      generic-anod-ci-args: --add-dep eng/gpr/gprbuild-internal
      disk: 80
      save-anod-logs: true
      needs: ["build:linux"]
      windows: true
      windows-cpus: 8
      windows-mem: 16
      windows-needs: ["build:windows"]
      artifacts: ["xunit-*.xml"]
      rules:
        - allow_failure: true

# Make some jobs optional

# on windows, considering the machines we have for the CI (the fast-startup
# ones have only 2 CPUs), the testsuites may take a long time to run, so
# let's make them optional and activate them manually on windows-impacting
# MRs.

build_gnat_bootstrap:windows:
  when: manual
  rules:
    - allow_failure: true

test_gpr2build:windows:
  when: manual

# full bootstrap is clearly a very long build, and will certainly need to be
# removed once everyone will have moved to gpr2...

build_gpr2_users:linux:
  when: manual

# The nightly run already catches the failures for this long running CI, so
# it should be optional. Use it when coming up with some specific objects life
# cycle management.

test_gpr2_valgrind:linux:
  when: manual

# gprconfig testsuite on windows is not much different than on linux, so let's
# skip it by default

test_gprconfig:windows:
  when: manual

# Cross-testing is not ready yet for gpr2. Working on it, in the mean time the
# result shows errors.

test_gpr2build:armhf_linux:linux:
  when: manual

test_gpr2build:arm_elf_zynq7k:linux:
  when: manual
