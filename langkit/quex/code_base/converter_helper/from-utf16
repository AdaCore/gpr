/* vim: set filetype=cpp:  -*- C++ -*-
 *
 * Declaration of all converter functions towards 'utf8', 'utf16', 'utf32',
 * 'char', and 'wchar_t': 
 *
 *    QUEX_CONVERTER_CHAR(utf16, utf8)(...)
 *    QUEX_CONVERTER_CHAR(utf16, utf16)(...)
 *    QUEX_CONVERTER_CHAR(utf16, utf32)(...)
 *    QUEX_CONVERTER_CHAR(utf16, char)(...)
 *    QUEX_CONVERTER_CHAR(utf16, wchar_t)(...)
 *
 *    QUEX_CONVERTER_STRING(utf16, utf8)(...)     for string and buffer 
 *    QUEX_CONVERTER_STRING(utf16, utf16)(...)    for string and buffer 
 *    QUEX_CONVERTER_STRING(utf16, utf32)(...)    for string and buffer 
 *    QUEX_CONVERTER_STRING(utf16, char)(...)     for string and buffer 
 *    QUEX_CONVERTER_STRING(utf16, wchar_t)(...)  for string and buffer 
 *
 * The declarations are generated by the file:
 *
 *             ../generator/declarations.g
 *
 * All functions are placed in the analyzer's namespace.
 *
 * (C) 2012 Frank-Rene Schaefer. 
 *     ABSOLUTELY NO WARRANTY                                                */
#if    ! defined(__QUEX_INCLUDE_GUARD__CONVERTER_HELPER__FROM_UTF16) \
    ||   defined(__QUEX_INCLUDE_GUARD__CONVERTER_HELPER__TMP_DISABLED)
#if    ! defined(__QUEX_INCLUDE_GUARD__CONVERTER_HELPER__TMP_DISABLED)
#        define  __QUEX_INCLUDE_GUARD__CONVERTER_HELPER__FROM_UTF16
#endif

#include <quex/code_base/converter_helper/common.h>

QUEX_NAMESPACE_MAIN_OPEN

#define __QUEX_FROM                utf16
#define __QUEX_FROM_TYPE           uint16_t

#include <quex/code_base/converter_helper/generator/declarations.g>

QUEX_NAMESPACE_MAIN_CLOSE

#endif /* __QUEX_INCLUDE_GUARD__CONVERTER_HELPER__FROM_UTF16 */

