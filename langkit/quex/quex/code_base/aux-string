/* -*- C++ -*- vim:set syntax=cpp: 
 * (C) 2010 Frank-Rene Schaefer    
 * ABSOLUTELY NO WARRANTY                    */
#ifndef __QUEX_INCLUDE_GUARD__AUX_STRING
#define __QUEX_INCLUDE_GUARD__AUX_STRING

#include <quex/code_base/definitions>

QUEX_NAMESPACE_MAIN_OPEN

QUEX_INLINE size_t 
QUEX_NAME(strlen)(const QUEX_TYPE_CHARACTER* Str);


QUEX_INLINE size_t 
QUEX_NAME(strcmp)(const QUEX_TYPE_CHARACTER* it0, const QUEX_TYPE_CHARACTER* it1);

QUEX_INLINE void
QUEX_NAME(to_utf8)(const QUEX_TYPE_CHARACTER** source_p, const QUEX_TYPE_CHARACTER* SourceEnd,
                   uint8_t**                   drain_p,  const uint8_t*             DrainEnd);

QUEX_INLINE void
QUEX_NAME(to_utf16)(const QUEX_TYPE_CHARACTER** source_p, const QUEX_TYPE_CHARACTER* SourceEnd,
                    uint16_t**                  drain_p,  const uint16_t*            DrainEnd);

QUEX_INLINE void
QUEX_NAME(to_utf32)(const QUEX_TYPE_CHARACTER** source_p, const QUEX_TYPE_CHARACTER* SourceEnd,
                    uint32_t**                  drain_p,  const uint32_t*            DrainEnd);

QUEX_INLINE void
QUEX_NAME(to_char)(const QUEX_TYPE_CHARACTER** source_p, const QUEX_TYPE_CHARACTER* SourceEnd,
                   char**                      drain_p,  const char*                DrainEnd);

#if ! defined(__QUEX_OPTION_WCHAR_T_DISABLED)
QUEX_INLINE void
QUEX_NAME(to_wchar)(const QUEX_TYPE_CHARACTER** source_p, const QUEX_TYPE_CHARACTER* SourceEnd,
                    wchar_t**                   drain_p,  const wchar_t*             DrainEnd);
#endif

QUEX_NAMESPACE_MAIN_CLOSE

#endif /* __QUEX_INCLUDE_GUARD__AUX_STRING */
