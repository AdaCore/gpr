
/*----------------------------------------------------------------------------
--                                                                          --
--                            GPR PROJECT PARSER                            --
--                                                                          --
--            Copyright (C) 2015-2016, Free Software Foundation, Inc.       --
--                                                                          --
-- This library is free software;  you can redistribute it and/or modify it --
-- under terms of the  GNU General Public License  as published by the Free --
-- Software  Foundation;  either version 3,  or (at your  option) any later --
-- version. This library is distributed in the hope that it will be useful, --
-- but WITHOUT ANY WARRANTY;  without even the implied warranty of MERCHAN- --
-- TABILITY or FITNESS FOR A PARTICULAR PURPOSE.                            --
--                                                                          --
-- As a special exception under Section 7 of GPL version 3, you are granted --
-- additional permissions described in the GCC Runtime Library Exception,   --
-- version 3.1, as published by the Free Software Foundation.               --
--                                                                          --
-- You should have received a copy of the GNU General Public License and    --
-- a copy of the GCC Runtime Library Exception along with this program;     --
-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --
-- <http://www.gnu.org/licenses/>.                                          --
--                                                                          --
----------------------------------------------------------------------------*/

/*  DO NOT EDIT THIS IS AN AUTOGENERATED FILE */

/* -*- C++ -*- vim: set syntax=cpp:
 * PURPOSE: File containing definition of token-identifier and
 *          a function that maps token identifiers to a string
 *          name.
 *
 * NOTE: This file has been created automatically by Quex.
 *       Visit quex.org for further info.
 *
 * DATE: Mon Sep 26 21:18:32 2016
 *
 * (C) 2005-2010 Frank-Rene Schaefer
 * ABSOLUTELY NO WARRANTY                                           */
#ifndef __QUEX_INCLUDE_GUARD__AUTO_TOKEN_IDS_QUEX_QUEX_LEXER__QUEX_TOKEN__
#define __QUEX_INCLUDE_GUARD__AUTO_TOKEN_IDS_QUEX_QUEX_LEXER__QUEX_TOKEN__

#ifndef __QUEX_OPTION_PLAIN_C
#   include<cstdio> 
#else
#   include<stdio.h> 
#endif

/* The token class definition file can only be included after 
 * the definition on TERMINATION and UNINITIALIZED.          
 * (fschaef 12y03m24d: "I do not rememember why I wrote this.")    */
#include "quex_lexer-token.h"

#define QUEX_TKN_ABSTRACT       ((QUEX_TYPE_TOKEN_ID)4)
#define QUEX_TKN_ALL            ((QUEX_TYPE_TOKEN_ID)3)
#define QUEX_TKN_AMP            ((QUEX_TYPE_TOKEN_ID)27)
#define QUEX_TKN_ARROW          ((QUEX_TYPE_TOKEN_ID)31)
#define QUEX_TKN_ASSIGN         ((QUEX_TYPE_TOKEN_ID)30)
#define QUEX_TKN_AT             ((QUEX_TYPE_TOKEN_ID)5)
#define QUEX_TKN_CASE           ((QUEX_TYPE_TOKEN_ID)6)
#define QUEX_TKN_CHAR           ((QUEX_TYPE_TOKEN_ID)35)
#define QUEX_TKN_COLON          ((QUEX_TYPE_TOKEN_ID)24)
#define QUEX_TKN_COMMA          ((QUEX_TYPE_TOKEN_ID)25)
#define QUEX_TKN_DEDENT         ((QUEX_TYPE_TOKEN_ID)4096)
#define QUEX_TKN_DOT            ((QUEX_TYPE_TOKEN_ID)26)
#define QUEX_TKN_END            ((QUEX_TYPE_TOKEN_ID)7)
#define QUEX_TKN_EXTENDS        ((QUEX_TYPE_TOKEN_ID)20)
#define QUEX_TKN_FOR            ((QUEX_TYPE_TOKEN_ID)8)
#define QUEX_TKN_IDENTIFIER     ((QUEX_TYPE_TOKEN_ID)2)
#define QUEX_TKN_INDENT         ((QUEX_TYPE_TOKEN_ID)4097)
#define QUEX_TKN_IS             ((QUEX_TYPE_TOKEN_ID)9)
#define QUEX_TKN_LABEL          ((QUEX_TYPE_TOKEN_ID)34)
#define QUEX_TKN_LEXING_FAILURE ((QUEX_TYPE_TOKEN_ID)1)
#define QUEX_TKN_LEX_FAIL       ((QUEX_TYPE_TOKEN_ID)36)
#define QUEX_TKN_LIMITED        ((QUEX_TYPE_TOKEN_ID)10)
#define QUEX_TKN_NODENT         ((QUEX_TYPE_TOKEN_ID)4098)
#define QUEX_TKN_NULL           ((QUEX_TYPE_TOKEN_ID)11)
#define QUEX_TKN_NUMBER         ((QUEX_TYPE_TOKEN_ID)33)
#define QUEX_TKN_OTHERS         ((QUEX_TYPE_TOKEN_ID)12)
#define QUEX_TKN_PACKAGE        ((QUEX_TYPE_TOKEN_ID)13)
#define QUEX_TKN_PAR_CLOSE      ((QUEX_TYPE_TOKEN_ID)22)
#define QUEX_TKN_PAR_OPEN       ((QUEX_TYPE_TOKEN_ID)21)
#define QUEX_TKN_PIPE           ((QUEX_TYPE_TOKEN_ID)29)
#define QUEX_TKN_PROJECT        ((QUEX_TYPE_TOKEN_ID)19)
#define QUEX_TKN_RENAMES        ((QUEX_TYPE_TOKEN_ID)14)
#define QUEX_TKN_SEMICOLON      ((QUEX_TYPE_TOKEN_ID)23)
#define QUEX_TKN_STRING         ((QUEX_TYPE_TOKEN_ID)32)
#define QUEX_TKN_TERMINATION    ((QUEX_TYPE_TOKEN_ID)0)
#define QUEX_TKN_TICK           ((QUEX_TYPE_TOKEN_ID)28)
#define QUEX_TKN_TYPE           ((QUEX_TYPE_TOKEN_ID)15)
#define QUEX_TKN_UNINITIALIZED  ((QUEX_TYPE_TOKEN_ID)4099)
#define QUEX_TKN_USE            ((QUEX_TYPE_TOKEN_ID)16)
#define QUEX_TKN_WHEN           ((QUEX_TYPE_TOKEN_ID)17)
#define QUEX_TKN_WITH           ((QUEX_TYPE_TOKEN_ID)18)


QUEX_NAMESPACE_TOKEN_OPEN
extern const char* QUEX_NAME_TOKEN(map_id_to_name)(const QUEX_TYPE_TOKEN_ID TokenID);
QUEX_NAMESPACE_TOKEN_CLOSE

#endif /* __QUEX_INCLUDE_GUARD__AUTO_TOKEN_IDS_QUEX_QUEX_LEXER__QUEX_TOKEN__ */
