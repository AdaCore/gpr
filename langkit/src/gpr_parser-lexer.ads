
------------------------------------------------------------------------------
--                                                                          --
--                            GPR PROJECT PARSER                            --
--                                                                          --
--            Copyright (C) 2015-2016, Free Software Foundation, Inc.       --
--                                                                          --
-- This library is free software;  you can redistribute it and/or modify it --
-- under terms of the  GNU General Public License  as published by the Free --
-- Software  Foundation;  either version 3,  or (at your  option) any later --
-- version. This library is distributed in the hope that it will be useful, --
-- but WITHOUT ANY WARRANTY;  without even the implied warranty of MERCHAN- --
-- TABILITY or FITNESS FOR A PARTICULAR PURPOSE.                            --
--                                                                          --
-- As a special exception under Section 7 of GPL version 3, you are granted --
-- additional permissions described in the GCC Runtime Library Exception,   --
-- version 3.1, as published by the Free Software Foundation.               --
--                                                                          --
-- You should have received a copy of the GNU General Public License and    --
-- a copy of the GCC Runtime Library Exception along with this program;     --
-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --
-- <http://www.gnu.org/licenses/>.                                          --
--                                                                          --
------------------------------------------------------------------------------

--  DO NOT EDIT THIS IS AN AUTOGENERATED FILE


with Ada.Containers;        use Ada.Containers;
with Ada.Containers.Hashed_Maps;
with Ada.Strings.Unbounded; use Ada.Strings.Unbounded;

with Interfaces; use Interfaces;

with Langkit_Support.Token_Data_Handler;
use Langkit_Support.Token_Data_Handler;

--  This package provides types and primitives to split text streams into lists
--  of tokens.

package GPR_Parser.Lexer is

   Unknown_Charset : exception;
   --  Raised by Lex_From_* functions when the input charset is not supported

   Invalid_Input : exception;
   --  Raised by Lex_From_* functions when the input contains an invalid byte
   --  sequence.

   procedure Lex_From_Filename (Filename, Charset : String;
                                TDH               : in out Token_Data_Handler;
                                With_Trivia       : Boolean);
   --  Extract tokens out of Filename and store them into TDH. Raise a
   --  Name_Error exception if the file could not be open.

   procedure Lex_From_Buffer (Buffer, Charset : String;
                              TDH             : in out Token_Data_Handler;
                              With_Trivia     : Boolean);
   --  Likewise, but extract tokens from an in-memory buffer. This never raises
   --  an exception.

   function Token_Text (Token_Id : Unsigned_16) return String;
   --  Return a human-readable name for some token kind


       QUEX_TKN_TERMINATION : constant := 0;
       QUEX_TKN_LEXINGFAILURE : constant := 1;
       QUEX_TKN_IDENTIFIER : constant := 2;
       QUEX_TKN_ALL : constant := 3;
       QUEX_TKN_ABSTRACT : constant := 4;
       QUEX_TKN_AT : constant := 5;
       QUEX_TKN_CASE : constant := 6;
       QUEX_TKN_END : constant := 7;
       QUEX_TKN_FOR : constant := 8;
       QUEX_TKN_IS : constant := 9;
       QUEX_TKN_LIMITED : constant := 10;
       QUEX_TKN_NULL : constant := 11;
       QUEX_TKN_OTHERS : constant := 12;
       QUEX_TKN_PACKAGE : constant := 13;
       QUEX_TKN_RENAMES : constant := 14;
       QUEX_TKN_TYPE : constant := 15;
       QUEX_TKN_USE : constant := 16;
       QUEX_TKN_WHEN : constant := 17;
       QUEX_TKN_WITH : constant := 18;
       QUEX_TKN_PROJECT : constant := 19;
       QUEX_TKN_EXTENDS : constant := 20;
       QUEX_TKN_EXTERNAL : constant := 21;
       QUEX_TKN_EXTERNAL_AS_LIST : constant := 22;
       QUEX_TKN_PAR_OPEN : constant := 23;
       QUEX_TKN_PAR_CLOSE : constant := 24;
       QUEX_TKN_SEMICOLON : constant := 25;
       QUEX_TKN_COLON : constant := 26;
       QUEX_TKN_COMMA : constant := 27;
       QUEX_TKN_DOT : constant := 28;
       QUEX_TKN_AMP : constant := 29;
       QUEX_TKN_TICK : constant := 30;
       QUEX_TKN_PIPE : constant := 31;
       QUEX_TKN_ASSIGN : constant := 32;
       QUEX_TKN_ARROW : constant := 33;
       QUEX_TKN_STRING : constant := 34;
       QUEX_TKN_NUMBER : constant := 35;
       QUEX_TKN_LABEL : constant := 36;
       QUEX_TKN_CHAR : constant := 37;
       QUEX_TKN_LEXFAIL : constant := 38;

private

   function Hash (N : Unsigned_16) return Ada.Containers.Hash_Type is
     (Ada.Containers.Hash_Type (N));

   package Token_Text_Maps is new Ada.Containers.Hashed_Maps
     (Key_Type        => Unsigned_16,
      Element_Type    => Unbounded_String,
      Hash            => Hash,
      Equivalent_Keys => "=");

   Token_Text_Map : Token_Text_Maps.Map;

   function Token_Text (Token_Id : Unsigned_16) return String is
     (To_String (Token_Text_Map.Element (Token_Id)));

end GPR_Parser.Lexer;
