
------------------------------------------------------------------------------
--                                                                          --
--                            GPR PROJECT PARSER                            --
--                                                                          --
--            Copyright (C) 2015-2016, Free Software Foundation, Inc.       --
--                                                                          --
-- This library is free software;  you can redistribute it and/or modify it --
-- under terms of the  GNU General Public License  as published by the Free --
-- Software  Foundation;  either version 3,  or (at your  option) any later --
-- version. This library is distributed in the hope that it will be useful, --
-- but WITHOUT ANY WARRANTY;  without even the implied warranty of MERCHAN- --
-- TABILITY or FITNESS FOR A PARTICULAR PURPOSE.                            --
--                                                                          --
-- As a special exception under Section 7 of GPL version 3, you are granted --
-- additional permissions described in the GCC Runtime Library Exception,   --
-- version 3.1, as published by the Free Software Foundation.               --
--                                                                          --
-- You should have received a copy of the GNU General Public License and    --
-- a copy of the GCC Runtime Library Exception along with this program;     --
-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --
-- <http://www.gnu.org/licenses/>.                                          --
--                                                                          --
------------------------------------------------------------------------------

--  DO NOT EDIT THIS IS AN AUTOGENERATED FILE


with System;

with GPR_Parser.Lexer;
use GPR_Parser.Lexer.Token_Data_Handlers;

--  Internal package used to provide interfaces types that help breaking
--  circular dependencies between Analysis_Unit and the root AST node
--  type definitions.

package GPR_Parser.Analysis_Interfaces is

   type Analysis_Unit_Interface_Type is interface;
   type Analysis_Unit_Interface is
      access all Analysis_Unit_Interface_Type'Class;
   --  Internal interface type for Analysis_Unit, to be stored in AST nodes
   --  without trigerring circular dependencies.
   --
   --  TODO??? This is a kludge to be removed when we have time to investigate
   --  how to find a cleaner way to avoid circular elaboration.

   function Token_Data
     (Unit : access Analysis_Unit_Interface_Type)
      return Token_Data_Handler_Access is abstract;
   --  Get an access to the token data handler bundled in Unit. Note that this
   --  token data handler is not valid anymore as soon as Unit is destroyed or
   --  reparsed.

   type Destroy_Procedure is access procedure (Object : System.Address);

   procedure Register_Destroyable_Helper
     (Unit    : access Analysis_Unit_Interface_Type;
      Object  : System.Address;
      Destroy : Destroy_Procedure)
      is abstract;
   --  Internal implementation helper for Register_Destroyable. This is
   --  basically an untyped version of it, using System.Address instead of
   --  access types. This is required to we can store these values in the same
   --  place.

   generic
      type T is private;
      type T_Access is access all T;
      with procedure Destroy (Object : in out T_Access);
   procedure Register_Destroyable
     (Unit   : access Analysis_Unit_Interface_Type'Class;
      Object : T_Access);
   --  Generic procedure to register an object so that it is automatically
   --  destroyed when Unit is destroyed.

end GPR_Parser.Analysis_Interfaces;
