--
--  Copyright (C) 2024, AdaCore
--
--  SPDX-License-Identifier: Apache-2.0 WITH LLVM-Exception
--

with GNATCOLL.OS.Process;

with GPR2.Build.Artifacts.Files;
with GPR2.Build.Compilation_Unit;
with GPR2.Path_Name;
with GPR2.Path_Name.Set;
with GPR2.Project.Registry.Attribute;

private with GPR2.View_Ids;

package GPR2.Build.Actions.Ada_Compile is

   package PRA renames GPR2.Project.Registry.Attribute;

   type Ada_Compile_Id is new Actions.Action_Id with private;

   function Create
     (Src : GPR2.Build.Compilation_Unit.Object) return Ada_Compile_Id;
   --  Create an Action_Id without having to create the full action object

   overriding function Image (Self : Ada_Compile_Id) return String;

   overriding function Db_Filename
     (Self : Ada_Compile_Id) return Simple_Name;

   overriding function "<" (L, R : Ada_Compile_Id) return Boolean;

   type Object is new Actions.Object with private;
   --  Action responsible for building Ada sources

   Undefined : constant Object;

   overriding function UID (Self : Object) return Actions.Action_Id'Class;

   function Is_Defined (Self : Object) return Boolean;

   procedure Initialize
     (Self : in out Object; Src : GPR2.Build.Compilation_Unit.Object);
   --  Initialize all object fields according to Src

   overriding function View (Self : Object) return GPR2.Project.View.Object;

   function Input_Unit
     (Self : Object) return GPR2.Build.Compilation_Unit.Object;
   --  Return the name of the compiled unit

   function Object_File (Self : Object) return Artifacts.Files.Object;
   --  Return the path of the generated object file

   function Ali_File (Self : Object) return Artifacts.Files.Object;
   --  Return the path of the generated ALI file

   function Dependencies
     (Self : in out Object) return GPR2.Path_Name.Set.Object;
   --  Return the list of known dependencies for this unit. The action ALI file
   --  must be up-to-date before calling this function, as the list of
   --  dependencies comes from it.

   overriding procedure On_Tree_Insertion
     (Self     : in out Object;
      Db       : in out GPR2.Build.Tree_Db.Object;
      Messages : in out GPR2.Log.Object);

   overriding procedure On_Tree_Propagation
     (Self : in out Object);

   overriding procedure Compute_Signature (Self : in out Object);

   overriding procedure Compute_Command
     (Self : in out Object;
      Args : out GNATCOLL.OS.Process.Argument_List;
      Env  : out GNATCOLL.OS.Process.Environment_Dict);

   overriding function Working_Directory
     (Self : Object) return Path_Name.Object;

   overriding procedure Post_Command (Self : in out Object);

   overriding function Skip (Self : Object) return Boolean;

private

   use type GPR2.View_Ids.View_Id;
   use type GPR2.Path_Name.Object;

   type Ada_Compile_Id is new Actions.Action_Id
     with record
      Main      : Compilation_Unit.Unit_Location;
   end record;

   function Create
     (Src : GPR2.Build.Compilation_Unit.Object) return Ada_Compile_Id
   is ((Main => Src.Main_Part));

   function Idx_Image (Idx : Unit_Index) return String is
     (Idx'Image (2 .. Idx'Image'Last));

   function Part_Image (Part : Compilation_Unit.Unit_Location) return String
   is (String (Part.Source.Simple_Name) &
       (if Part.Index /= No_Index then "@" & Idx_Image (Part.Index) else ""));

   overriding function Image (Self : Ada_Compile_Id) return String is
     ("[Compile Ada] " & Part_Image (Self.Main) &
      " ("  & String (Self.Main.View.Path_Name.Simple_Name) & ')');

   overriding function Db_Filename
     (Self : Ada_Compile_Id) return Simple_Name is
       (Simple_Name
         ("compile_ada_" & Part_Image (Self.Main) & ".json"));

   overriding function "<" (L, R : Ada_Compile_Id) return Boolean is
     (if L.Main.View.Id /= R.Main.View.Id
      then L.Main.View.Id < R.Main.View.Id
      elsif L.Main.Source /= R.Main.Source
      then L.Main.Source < R.Main.Source
      else L.Main.Index < R.Main.Index);

   type Object is new Actions.Object with record
      Ali_File  : Artifacts.Files.Object;
      --  Unit's ALI file. Can be undefined if not existing on disk

      Obj_File  : Artifacts.Files.Object;
      --  Compiled object file, can be undefined if not existing on disk

      Deps      : GPR2.Path_Name.Set.Object := GPR2.Path_Name.Set.Empty_Set;
      --  List of known dependencies for this unit. It is obtained from
      --  the parsing of the ALI file generated by the action. Remains empty
      --  before the action post command

      Closure   : Action_Id_Sets.Set;
      --  List of all object files that are needed to have Self's symbols
      --  fully resolved.

      CU        : GPR2.Build.Compilation_Unit.Object;
      --  The Unit to build
   end record;

   Undefined : constant Object := (others => <>);

   overriding function View (Self : Object) return GPR2.Project.View.Object is
     (Self.CU.Owning_View);

   function Input_Unit
     (Self : Object) return GPR2.Build.Compilation_Unit.Object
   is (Self.CU);

   function Object_File (Self : Object) return Artifacts.Files.Object is
     (Self.Obj_File);

   function Ali_File (Self : Object) return Artifacts.Files.Object is
     (Self.Ali_File);

   function Is_Defined (Self : Object) return Boolean is
     (Self /= Undefined);

   overriding function Working_Directory
     (Self : Object) return Path_Name.Object is
     (Self.View.Object_Directory);

end GPR2.Build.Actions.Ada_Compile;
