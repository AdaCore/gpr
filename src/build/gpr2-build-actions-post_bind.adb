--
--  Copyright (C) 2024, AdaCore
--
--  SPDX-License-Identifier: Apache-2.0 WITH LLVM-Exception
--

with GPR2.Build.Artifacts.Files;
with GPR2.Build.Tree_Db;
with GPR2.Project.Attribute;
with GPR2.Project.Attribute_Index;

package body GPR2.Build.Actions.Post_Bind is

   package PAI renames GPR2.Project.Attribute_Index;

   -------------
   -- Command --
   -------------

   overriding procedure Compute_Command
     (Self : in out Object;
      Args : out GNATCOLL.OS.Process.Argument_List;
      Env  : out GNATCOLL.OS.Process.Environment_Dict)
   is
      pragma Unreferenced (Env);
   begin
      --  ??? Replace hard coded values

      Args.Append ("gcc");
      Args.Append ("-c");
      Args.Append (String (Self.Input.Simple_Name));
      Args.Append ("-o");
      Args.Append (String (Self.Output.Simple_Name));
   end Compute_Command;

   -----------------------
   -- Compute_Signature --
   -----------------------

   overriding procedure Compute_Signature (Self : in out Object) is
      use GPR2.Build.Signature;

      UID : constant Actions.Action_Id'Class := Object'Class (Self).UID;
      Art : Artifacts.Files.Object;
   begin
      Self.Signature.Clear;

      --  As the unit has been generated by the binder, it does not belong
      --  to the tree. The consequence is that the unit sources will not be
      --  found as dependencies. Thus, we need to add them explicitly.

      Art := Artifacts.Files.Create (Self.Input);
      Self.Signature.Update_Artifact (Art.UID, Art.Image, Art.Checksum);
      Art := Artifacts.Files.Create (Self.Output);
      Self.Signature.Update_Artifact (Art.UID, Art.Image, Art.Checksum);

      Self.Signature.Store (Self.Tree.Db_Filename_Path (UID));
   end Compute_Signature;

   ----------------
   -- Initialize --
   ----------------

   function Create
     (Impl : GPR2.Path_Name.Object;
      View : GPR2.Project.View.Object) return Object
   is
      Attr : constant GPR2.Project.Attribute.Object :=
               View.Attribute (PRA.Compiler.Object_File_Suffix,
                               PAI.Create (Ada_Language));
      O_Suff : constant Simple_Name :=
                 (if Attr.Is_Defined then Simple_Name (Attr.Value.Text)
                  else ".o");
      Self   : Object;

   begin
      Self.Traces := Create ("ACTION_POST_BIND");
      Self.Input  := Impl;
      Self.Output :=
        View.Object_Directory.Compose (Impl.Base_Filename & O_Suff);
      Self.View   := View;

      return Self;
   end Create;

   -----------------------
   -- On_Tree_Insertion --
   -----------------------

   overriding procedure On_Tree_Insertion
     (Self     : in out Object;
      Db       : in out GPR2.Build.Tree_Db.Object;
      Messages : in out GPR2.Log.Object)
   is
      UID : constant Actions.Action_Id'Class := Object'Class (Self).UID;
   begin
      Db.Add_Output
        (UID,
         Artifacts.Files.Create (Self.Output),
         Messages);

      if Messages.Has_Error then
         return;
      end if;

      Db.Add_Input
        (UID,
         Artifacts.Files.Create (Self.Input),
         True);
   end On_Tree_Insertion;

end GPR2.Build.Actions.Post_Bind;
